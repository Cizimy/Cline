# MCPサーバーコンテキスト定義

version: "1.1.0"
type: "mcp_context"

# サーバー定義
server_definition:
  server_type:
    type: "string"
    required: true
    enum: ["python", "node", "custom"]
    description: "MCPサーバーの実行環境タイプ"
    reference: "standards/processes/mcp/server_types.yaml"
    validation:
      runtime_check: true
      dependency_check: true
      compatibility_check: true
  
  api_endpoints:
    base_url: "string"
    version: "string"
    rate_limits:
      requests_per_second: "number"
      burst_limit: "number"
    timeout:
      connect: "number"
      read: "number"
      write: "number"
  
  scaling_config:
    required: false
    description: "スケーリング設定（オプショナル）"
    properties:
      min_instances:
        type: "number"
        default: 1
      max_instances:
        type: "number"
        default: 1
      auto_scaling:
        type: "object"
        required: false
        properties:
          enabled:
            type: "boolean"
            default: false
          metrics:
            type: "array"
            required: false
            description: "スケーリングメトリクス（オプショナル）"
            items:
              type: "object"
              required: false
              properties:
                name:
                  type: "string"
                  enum: ["cpu_usage", "memory_usage", "request_count"]
                threshold:
                  type: "number"
                description:
                  type: "string"
            default:
              - name: "cpu_usage"
                threshold: 80
                description: "CPU使用率（%）"
              - name: "memory_usage"
                threshold: 1024
                description: "メモリ使用量（MB）"
              - name: "request_count"
                threshold: 1000
                description: "リクエスト数/分"

# 必要な知識ベース
required_knowledge:
  server_architecture:
    description: "MCPサーバーのアーキテクチャ理解"
    components:
      - "通信プロトコル"
      - "認証メカニズム"
      - "エラーハンドリング"
      - "状態管理"
  
  authentication_methods:
    description: "認証方式の理解"
    types:
      - "環境変数ベース"
      - "トークンベース"
      - "OAuth認証"
  
  error_handling:
    description: "エラー処理パターン"
    patterns:
      - "認証エラー"
      - "通信エラー"
      - "タイムアウト"
      - "リソース不足"

# 状態追跡
state_tracking:
  installation:
    states:
      - "not_started"
      - "in_progress"
      - "completed"
      - "failed"
    transitions:
      - from: "not_started"
        to: "in_progress"
        triggers: ["setup_initiated"]
        validation: "environment_check"
      - from: "in_progress"
        to: "completed"
        triggers: ["setup_successful"]
        validation: "completion_check"
      - from: "in_progress"
        to: "failed"
        triggers: ["setup_error"]
        validation: "error_analysis"
  
  configuration:
    states:
      - "unconfigured"
      - "partially_configured"
      - "fully_configured"
      - "invalid"
    transitions:
      - from: "unconfigured"
        to: "partially_configured"
        triggers: ["config_started"]
        validation: "config_check"
      - from: "partially_configured"
        to: "fully_configured"
        triggers: ["config_completed"]
        validation: "config_validation"
      - from: "fully_configured"
        to: "invalid"
        triggers: ["config_error"]
        validation: "error_validation"

# 非同期処理管理
async_processing:
  state_management:
    enabled: true
    checkpoints:
      required: true
      interval: "number"
      timeout: "number"
      storage_pattern:
        reference: "async_storage_patterns.yaml#checkpoint_storage"
        default: "memory_based"
    recovery:
      auto_retry: true
      max_retries: 3
      backoff_strategy: "exponential"
  
  task_tracking:
    unique_id: true
    status_updates:
      frequency: "realtime"
      persistence: true
      format:
        reference: "async_storage_patterns.yaml#progress_tracking.format"
      storage_pattern:
        reference: "async_storage_patterns.yaml#pattern_storage"
        default: "memory"
    completion_verification:
      required: true
      timeout: 300

# プロセス間通信（IPC）
ipc_configuration:
  communication_types:
    - type: "message_queue"
      protocol: "AMQP"
      reliability: "at_least_once"
      metrics:
        - name: "queue_length"
          type: "gauge"
          description: "メッセージキューの長さ"
          threshold: 1000
          alert_level: "warning"
        - name: "processing_time"
          type: "histogram"
          description: "メッセージ処理時間（ms）"
          threshold: 500
          alert_level: "warning"
        - name: "error_rate"
          type: "rate"
          description: "メッセージ処理エラー率"
          threshold: 0.01
          alert_level: "critical"

    - type: "shared_memory"
      access_mode: "read_write"
      sync_mechanism: "mutex"
      metrics:
        - name: "memory_usage"
          type: "gauge"
          description: "共有メモリ使用率"
          threshold: 80
          alert_level: "warning"
        - name: "lock_contention"
          type: "counter"
          description: "ロック競合回数"
          threshold: 100
          alert_level: "warning"
        - name: "access_latency"
          type: "histogram"
          description: "メモリアクセス遅延（μs）"
          threshold: 1000
          alert_level: "warning"

    - type: "socket"
      protocol: "TCP"
      encryption: true
      metrics:
        - name: "connection_count"
          type: "gauge"
          description: "アクティブな接続数"
          threshold: 1000
          alert_level: "warning"
        - name: "bandwidth_usage"
          type: "gauge"
          description: "帯域幅使用率"
          threshold: 80
          alert_level: "warning"
        - name: "packet_loss"
          type: "rate"
          description: "パケット損失率"
          threshold: 0.001
          alert_level: "critical"
  
  message_patterns:
    - pattern: "request_response"
      timeout: 30
      retry_policy: "exponential_backoff"
      metrics:
        - name: "response_time"
          type: "histogram"
          description: "リクエスト-レスポンス時間（ms）"
          threshold: 1000
          alert_level: "warning"
        - name: "retry_count"
          type: "counter"
          description: "リトライ回数"
          threshold: 3
          alert_level: "warning"

    - pattern: "publish_subscribe"
      delivery_guarantee: "at_least_once"
      metrics:
        - name: "subscriber_count"
          type: "gauge"
          description: "アクティブなサブスクライバー数"
          threshold: 100
          alert_level: "info"
        - name: "message_rate"
          type: "rate"
          description: "メッセージ配信率（msg/s）"
          threshold: 1000
          alert_level: "warning"

    - pattern: "stream"
      buffer_size: 1024
      metrics:
        - name: "buffer_usage"
          type: "gauge"
          description: "バッファ使用率"
          threshold: 80
          alert_level: "warning"
        - name: "throughput"
          type: "rate"
          description: "データスループット（MB/s）"
          threshold: 100
          alert_level: "warning"

# メモリ要件
memory_requirements:
  previous_configurations:
    type: "persistent"
    storage: "file"
    path: "validations/history/config_history.yaml"
    retention_period: 30
  
  error_patterns:
    type: "learning"
    storage:
      type: "memory"
      persistence: true
    update_frequency: "on_error"
  
  successful_patterns:
    type: "learning"
    storage:
      type: "memory"
      persistence: true
    update_frequency: "on_success"

# 操作パターン
operation_patterns:
  setup:
    steps:
      - "環境チェック"
      - "依存関係インストール"
      - "初期設定"
      - "動作確認"
    validation_points:
      - after: "環境チェック"
        check: "environment_validation"
      - after: "初期設定"
        check: "configuration_validation"
  
  configuration:
    steps:
      - "設定ファイル作成"
      - "環境変数設定"
      - "認証情報設定"
      - "接続テスト"
    validation_points:
      - after: "設定ファイル作成"
        check: "file_validation"
      - after: "認証情報設定"
        check: "auth_validation"

# エラーパターンと重要度
error_patterns:
  # 重要度の定義
  severity_levels:
    critical:
      response_time: 15  # 分単位
      description: "即時対応（15分以内）"
      examples:
        - "システム全体の機能停止"
        - "重大なセキュリティ違反"
        - "データ損失のリスク"
    high:
      response_time: 60  # 分単位
      description: "1時間以内の対応"
      examples:
        - "主要機能の部分的な停止"
        - "パフォーマンスの深刻な低下"
        - "データ整合性の問題"
    low:
      response_time: 1440  # 分単位
      description: "24時間以内の対応"
      examples:
        - "軽微な機能の不具合"
        - "パフォーマンスの軽度な低下"
        - "非重要な警告"

  # 自動リカバリー条件の定義
  auto_recovery_conditions:
    retry_conditions:
      max_retries:
        critical: 2
        high: 3
        low: 5
      retry_interval:
        critical: 1  # 分単位
        high: 5
        low: 15
      backoff_multiplier: 1.5
    
    error_type_conditions:
      recoverable:
        - "connection_timeout"
        - "rate_limit_exceeded"
        - "temporary_service_unavailable"
      non_recoverable:
        - "authentication_failed"
        - "invalid_configuration"
        - "permission_denied"
    
    resource_state_conditions:
      required_states:
        - "system_responsive"
        - "sufficient_memory"
        - "network_available"
      thresholds:
        cpu_usage: 80  # パーセント
        memory_usage: 90  # パーセント
        disk_space: 85  # パーセント

  # エラーパターンの定義
  authentication:
    symptoms:
      - "401 Unauthorized"
      - "Invalid token"
    severity: "high"
    escalation_policy:
      level: 1
      notify: ["system_admin"]
      auto_retry: false
    diagnosis:
      - "環境変数の確認"
      - "トークンの有効期限確認"
    recovery:
      - "トークンの再取得"
      - "認証情報の更新"
  
  connection:
    symptoms:
      - "Connection refused"
      - "Timeout"
    severity: "critical"
    escalation_policy:
      level: 2
      notify: ["system_admin", "network_admin"]
      auto_retry: true
    diagnosis:
      - "サーバー状態の確認"
      - "ネットワーク接続の確認"
    recovery:
      - "サーバーの再起動"
      - "ネットワーク設定の修正"

# モニタリング設定の参照
monitoring_configuration:
  reference: "global_context.monitoring_settings"
  server_specific_metrics:
    - name: "api_response_time"
      type: "gauge"
      description: "APIレスポンス時間"
    - name: "active_connections"
      type: "gauge"
      description: "アクティブな接続数"

# 学習パターンの参照
learning_patterns:
  reference: "global_context.ai_agent_settings.learning_patterns"
  server_specific_patterns:
    - name: "api_interaction"
      description: "APIインタラクションパターン"
    - name: "server_lifecycle"
      description: "サーバーライフサイクル管理パターン"

# 更新履歴
history:
  - version: "1.1.0"
    date: "2025-01-11"
    description: "MCPサーバー定義の強化、非同期処理管理の追加、IPCの強化、エラー重要度の追加、整合性の改善"
    author: "Cline AI"
  - version: "1.0.0"
    date: "2025-01-11"
    description: "初期バージョン"
    author: "Cline AI"