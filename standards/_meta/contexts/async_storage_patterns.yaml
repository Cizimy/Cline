# 非同期ストレージパターン定義（MCPフレームワーク標準準拠）
version: "1.2.0"
type: "async_storage_patterns"

required_fields:
  - name: "checkpoint_storage"
    type: "object"
    description: "チェックポイントストレージパターン"
  - name: "pattern_storage"
    type: "object"
    description: "パターンストレージ定義"
  - name: "progress_tracking"
    type: "object"
    description: "進捗追跡の標準フォーマット"

# チェックポイントストレージパターン
checkpoint_storage:
  patterns:
    file_based:
      type: "persistent"
      description: "ファイルベースの長期保存用ストレージ"
      implementation:
        storage_type: "filesystem"
        server: "filesystem"
        config:
          base_path: "checkpoints/"
          format: "yaml"
          retention:
            enabled: true
            days: 30
      use_cases:
        - "長期的なチェックポイントの保存"
        - "システム再起動後の状態復元"
        - "監査ログの保持"
      limitations:
        - "I/O性能への依存"
        - "分散システムでの同期の複雑さ"

    memory_based:
      type: "temporary"
      description: "メモリベースの一時的ストレージ"
      implementation:
        storage_type: "memory"
        server: "memory"
        config:
          expiration: 3600  # 1時間
          max_size: "100MB"
      use_cases:
        - "高頻度な一時的チェックポイント"
        - "パフォーマンス重視のケース"
        - "セッション中のみの状態保持"
      limitations:
        - "永続性なし"
        - "メモリ容量の制限"
        - "サーバー再起動で消失"

    database_based:
      type: "persistent"
      description: "データベースベースの大規模システム用ストレージ"
      implementation:
        storage_type: "database"
        servers: ["postgres", "sqlite"]
        config:
          table_name: "checkpoints"
          indexes: ["task_id", "timestamp"]
          partitioning:
            enabled: true
            strategy: "range"
            column: "timestamp"
          cleanup:
            enabled: true
            retention_days: 90
      use_cases:
        - "大規模システムでのチェックポイント管理"
        - "複雑なクエリが必要なケース"
        - "トランザクション整合性が重要なケース"
      limitations:
        - "セットアップの複雑さ"
        - "リソース要件が高い"
        - "コストが比較的高い"

# パターンストレージ定義
pattern_storage:
  memory:
    type: "temporary"
    description: "メモリ内パターン保存"
    implementation:
      server: "memory"
      config:
        collection: "patterns"
        indexing:
          enabled: true
          fields: ["pattern_type", "frequency"]
    use_cases:
      - "頻繁にアクセスされるパターン"
      - "一時的なパターン分析"
    metrics:
      - name: "pattern_hit_rate"
        type: "gauge"
        description: "パターンのヒット率"
        threshold:
          critical: 0.5  # 50%以下は重大
          non_critical: 0.7  # 70%以下は要注意
      - name: "pattern_update_frequency"
        type: "counter"
        description: "パターン更新頻度"
        threshold:
          critical: 100  # 100回/秒以上は重大
          non_critical: 50  # 50回/秒以上は要注意

  file:
    type: "persistent"
    description: "ファイルベースのパターン保存"
    implementation:
      server: "filesystem"
      config:
        base_path: "patterns/"
        format: "yaml"
        versioning: true
    use_cases:
      - "長期的なパターン分析"
      - "パターン履歴の追跡"
    metrics:
      - name: "pattern_file_size"
        type: "gauge"
        description: "パターンファイルのサイズ"
        threshold:
          critical: 1000  # 1GB以上は重大
          non_critical: 500  # 500MB以上は要注意
        unit: "MB"
      - name: "pattern_read_latency"
        type: "histogram"
        description: "パターン読み取り遅延"
        threshold:
          critical: 1000  # 1秒以上は重大
          non_critical: 500  # 500ms以上は要注意
        unit: "milliseconds"

  database:
    type: "persistent"
    description: "データベースベースのパターン保存"
    implementation:
      servers: ["postgres", "sqlite"]
      config:
        table_name: "patterns"
        indexes: ["pattern_type", "created_at"]
        analytics:
          enabled: true
          aggregations: ["frequency", "effectiveness"]
    use_cases:
      - "複雑なパターン分析"
      - "パターン間の関係性分析"
    metrics:
      - name: "pattern_query_time"
        type: "histogram"
        description: "パターンクエリ時間"
        threshold:
          critical: 1000  # 1秒以上は重大
          non_critical: 500  # 500ms以上は要注意
        unit: "milliseconds"
      - name: "pattern_storage_size"
        type: "gauge"
        description: "パターンストレージサイズ"
        threshold:
          critical: 10000  # 10GB以上は重大
          non_critical: 5000  # 5GB以上は要注意
        unit: "MB"

# 進捗追跡の標準フォーマット
progress_tracking:
  format:
    version: "1.0.0"
    fields:
      task_id:
        type: "string"
        required: true
        description: "タスクの一意識別子"
      
      status:
        type: "string"
        required: true
        enum:
          - "initializing"
          - "ready"
          - "running"
          - "error"
        description: "タスクの現在の状態（MCPフレームワーク標準準拠）"
      
      progress:
        type: "number"
        required: true
        min: 0
        max: 100
        description: "完了率（パーセント）"
      
      checkpoint:
        type: "object"
        required: true
        properties:
          id:
            type: "string"
            description: "チェックポイントの一意識別子"
          timestamp:
            type: "string"
            format: "date-time"
            description: "チェックポイント作成時刻"
          data:
            type: "object"
            description: "チェックポイントデータ"
      
      metadata:
        type: "object"
        required: false
        properties:
          started_at:
            type: "string"
            format: "date-time"
          updated_at:
            type: "string"
            format: "date-time"
          estimated_completion:
            type: "string"
            format: "date-time"
          dependencies:
            type: "array"
            items:
              type: "string"
          tags:
            type: "array"
            items:
              type: "string"

  validation:
    rules:
      - "progress値は常に0-100の範囲内"
      - "timestamp形式はISO 8601に準拠"
      - "task_idは一意であること"
      - "statusは定義された列挙値のみ"
    
  persistence:
    strategy:
      type: "hybrid"
      description: "ストレージ戦略の動的選択"
      selection_criteria:
        - factor: "data_size"
          threshold: "1MB"
          storage: "database"
        - factor: "update_frequency"
          threshold: "10/second"
          storage: "memory"
        - factor: "retention_required"
          threshold: "30days"
          storage: "file"

# 更新履歴
history:
  - version: "1.2.0"
    date: "2025-01-12"
    description: "MCPフレームワーク標準への完全準拠"
    author: "Cline AI"
    changes:
      - "バージョンを1.2.0に更新"
      - "進捗追跡のステータスをMCPフレームワーク標準の4段階に統一"
      - "メトリクスにcritical/non-criticalの2段階重要度を追加"
      - "メトリクスにthresholdとunit定義を追加"

  - version: "1.0.0"
    date: "2025-01-11"
    description: "初期バージョン - 非同期ストレージパターンの標準化"
    author: "Cline AI"